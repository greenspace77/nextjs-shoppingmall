// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String? // 소셜로그인 시 null 가능
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Int
  stock       Int
  vector      Bytes? // pgvector: custom migration 필요
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  userId      String
  totalAmount Int
  status      OrderStatus
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
  payment    Payment?
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Payment {
  id            String        @id @default(uuid())
  orderId       String        @unique
  paymentMethod String
  amount        Int
  status        PaymentStatus
  transactionId String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  order Order @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  PENDING
  PAID
  CANCELED
}

enum PaymentStatus {
  WAITING
  PAID
  FAILED
}
